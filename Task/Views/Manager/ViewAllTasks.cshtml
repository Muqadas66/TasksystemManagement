@model List<AssignTasks>
@using System.Linq

@{
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet"> 

<div class="container mt-4">
    <h2 class="text-center text-primary mb-4">All Tasks</h2>

    <div class="card shadow-lg border-0">
        <div class="card-body">
            <table class="table table-hover table-bordered table-striped">
                <thead class="thead-light">
                    <tr class="text-center">
                        <th><i class="fas fa-tasks"></i> Task Title</th>
                        <th><i class="fas fa-align-left"></i> Description</th>
                        <th><i class="fas fa-calendar-alt"></i> Deadline</th>
                        <th><i class="fas fa-flag"></i> Priority</th>
                        <th><i class="fas fa-folder"></i> Category</th>
                        <th><i class="fas fa-user"></i> Assigned User</th>
                        <th><i class="fas fa-user-tie"></i> Created By</th>
                        <th><i class="fas fa-check-circle"></i> Status</th>
                        <th><i class="fas fa-cogs"></i> Actions</th>
                        <th><i class="fas fa-tachometer-alt"></i> Track Tasks</th>
                        <th><i class="fas fa-comment-alt"></i> Feedback</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model)
                    {
                        <tr class="text-center">
                            <td>@task.Title</td>
                            <td>@task.Description</td>
                            <td>@task.Deadline</td>
                            <td>
                                @if (task.Priority == "High")
                                {
                                    <span class="badge badge-danger p-2"><i class="fas fa-exclamation-circle"></i> High</span>
                                }
                                else if (task.Priority == "Medium")
                                {
                                    <span class="badge badge-warning p-2"><i class="fas fa-exclamation-triangle"></i> Medium</span>
                                }
                                else
                                {
                                    <span class="badge badge-success p-2"><i class="fas fa-check-circle"></i> Low</span>
                                }
                            </td>
                            <td>@task.Category</td>
                            <td>
                                @{
                                    var users = ViewBag.Users as List<User>;
                                    var user = users?.FirstOrDefault(u => u.UserID == task.AssignedUserID);
                                    if (user != null)
                                    {
                                        <span class="badge badge-primary p-2"><i class="fas fa-user"></i> @user.Username</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning p-2"><i class="fas fa-exclamation-triangle"></i> Not Assigned</span>
                                    }
                                }
                            </td>
                            <td>@task.CreatedBy</td>
                            <td>@task.Status</td>
                            <td>
                                <a href="@Url.Action("ReassignTasks", "Manager", new { id = task.AssignTaskID })" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-exchange-alt"></i> Reassign
                                </a>
                            </td>
                            <td>
                                @Html.ActionLink("Monitor Tasks", "ViewTaskDetails", "Manager", new { id = task.AssignTaskID }, new { @class = "btn btn-info btn-sm" })
                            </td>
                            <td>
                                <a href="@Url.Action("AddComment", "Manager", new { id = task.AssignTaskID })" class="btn btn-success btn-sm">
                                    <i class="fas fa-comments"></i> Add Comment
                                </a>
                            </td>
                        </tr>
                    }
                    @if (!Model.Any())
                    {
                        <tr>
                            <td colspan="11" class="text-center">No tasks found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    
    .card {
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.2);
    }

    .table {
        margin-bottom: 0;
    }

    
    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
        transform: scale(1.01);
        transition: all 0.2s ease-in-out;
    }

 
    .thead-light th {
        background-color: #007bff;
        color: white;
        font-weight: bold;
        text-transform: uppercase;
    }

    
    .btn-outline-primary:hover, .btn-info:hover, .btn-success:hover {
        transform: scale(1.05);
        transition: all 0.2s ease;
    }

 
    .badge {
        font-size: 0.9rem;
        padding: 0.5rem;
        border-radius: 10px;
    }

    .badge-danger {
        background-color: #dc3545;
    }

    .badge-warning {
        background-color: #ffc107;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-primary {
        background-color: #007bff;
    }

    .btn {
        font-size: 0.85rem;
    }

  
    tbody tr {
        animation: fadeInUp 0.5s ease-in-out;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
